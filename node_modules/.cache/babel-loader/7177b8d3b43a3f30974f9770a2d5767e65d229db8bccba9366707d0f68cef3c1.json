{"ast":null,"code":"var _jsxFileName = \"/home/vivek/Desktop/09-time-to-practice-starting-code/src/pages/QuotesDetails.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useRouteMatch, Link, Route, Routes, useParams } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dummy_Quotes = [{\n  id: \"q1\",\n  author: \"Nikhil Rai\",\n  text: `\n  “Two things are infinite the universe and human stupidity and Im not sure about the universe.”`\n}, {\n  id: \"q2\",\n  author: \"aditya singh\",\n  text: ` \n    “Be who you are and say what you feel, because those who mind don't matter, and those who matter don't mind.”`\n}];\nconst QuotesDetails = () => {\n  _s();\n  const match = useRouteMatch();\n  const param = useParams();\n  const quotes = Dummy_Quotes.find(quote => quote.id === param.quotesId);\n  if (!quotes) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quotes.text,\n      author: quotes.author,\n      id: quotes.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"comments\",\n        element: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(QuotesDetails, \"J9KU2VpQ2oK7S84Sc/kd3uFEOQE=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n_c = QuotesDetails;\nexport default QuotesDetails;\nvar _c;\n$RefreshReg$(_c, \"QuotesDetails\");","map":{"version":3,"names":["Fragment","useRouteMatch","Link","Route","Routes","useParams","Comments","HighlightedQuote","Dummy_Quotes","id","author","text","QuotesDetails","match","param","quotes","find","quote","quotesId","path","url"],"sources":["/home/vivek/Desktop/09-time-to-practice-starting-code/src/pages/QuotesDetails.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport {useRouteMatch, Link, Route, Routes, useParams } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst Dummy_Quotes = [\n  {\n    id: \"q1\",\n    author: \"Nikhil Rai\",\n    text: `\n  “Two things are infinite the universe and human stupidity and Im not sure about the universe.”`,\n  },\n  {\n    id: \"q2\",\n    author: \"aditya singh\",\n    text: ` \n    “Be who you are and say what you feel, because those who mind don't matter, and those who matter don't mind.”`,\n  },\n];\n\nconst QuotesDetails = () => {\n  const match = useRouteMatch();\n  const param = useParams();\n  const quotes = Dummy_Quotes.find((quote) => quote.id === param.quotesId);\n\n  if (!quotes) {\n    return <p>no quote found!</p>;\n  }\n  return (\n    <Fragment>\n      <HighlightedQuote text={quotes.text} author={quotes.author} id ={quotes.id}/>\n    \n\n      <Route path={match.path} exact>\n        <div className='centered'>\n          <Link className='btn--flat' to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n        {/* <div className=\"centered\">\n     <Link className=\"btn--flat\" to=\"comments\" >add comment</Link>\n     </div>\n        */}\n\n      <Routes>\n       \n        <Route path=\"comments\" element={<Comments/>} />\n      </Routes>\n    </Fragment>\n  );\n};\n\nexport default QuotesDetails;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AAC/E,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,gBAAgB,MAAM,uCAAuC;AAAC;AAErE,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,YAAY;EACpBC,IAAI,EAAG;AACX;AACE,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,cAAc;EACtBC,IAAI,EAAG;AACX;AACE,CAAC,CACF;AAED,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAMC,KAAK,GAAGZ,aAAa,EAAE;EAC7B,MAAMa,KAAK,GAAGT,SAAS,EAAE;EACzB,MAAMU,MAAM,GAAGP,YAAY,CAACQ,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACR,EAAE,KAAKK,KAAK,CAACI,QAAQ,CAAC;EAExE,IAAI,CAACH,MAAM,EAAE;IACX,oBAAO;MAAA,UAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAI;EAC/B;EACA,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEA,MAAM,CAACJ,IAAK;MAAC,MAAM,EAAEI,MAAM,CAACL,MAAO;MAAC,EAAE,EAAGK,MAAM,CAACN;IAAG;MAAA;MAAA;MAAA;IAAA,QAAE,eAG7E,QAAC,KAAK;MAAC,IAAI,EAAEI,KAAK,CAACM,IAAK;MAAC,KAAK;MAAA,uBAC5B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAEN,KAAK,CAACO,GAAI,WAAW;UAAA,UAAC;QAEzD;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eAMR,QAAC,MAAM;MAAA,uBAEL,QAAC,KAAK;QAAC,IAAI,EAAC,UAAU;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEf,CAAC;AAAC,GA/BIR,aAAa;EAAA,QACHX,aAAa,EACbI,SAAS;AAAA;AAAA,KAFnBO,aAAa;AAiCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}